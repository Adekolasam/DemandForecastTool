// <auto-generated />
using System;
using DemandForecastTool.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DemandForecastTool.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DemandForecastTool.Context.DataCentre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("DataCentres");
                });

            modelBuilder.Entity("DemandForecastTool.Context.Environment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Environments");
                });

            modelBuilder.Entity("DemandForecastTool.Context.ResourceRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CTS")
                        .HasColumnType("int");

                    b.Property<int>("DataCentreId")
                        .HasColumnType("int");

                    b.Property<int>("EIS")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentId")
                        .HasColumnType("int");

                    b.Property<int>("GMB")
                        .HasColumnType("int");

                    b.Property<int>("GMIT")
                        .HasColumnType("int");

                    b.Property<int>("RISK")
                        .HasColumnType("int");

                    b.Property<DateTime>("RequestedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ResourceTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DataCentreId");

                    b.HasIndex("EnvironmentId");

                    b.HasIndex("ResourceTypeId");

                    b.ToTable("ResourceRequests");
                });

            modelBuilder.Entity("DemandForecastTool.Context.ResourceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("ResourceTypes");
                });

            modelBuilder.Entity("DemandForecastTool.Context.ResourceRequest", b =>
                {
                    b.HasOne("DemandForecastTool.Context.DataCentre", "DataCentre")
                        .WithMany("ResourceRequests")
                        .HasForeignKey("DataCentreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DemandForecastTool.Context.Environment", "Environment")
                        .WithMany("ResourceRequests")
                        .HasForeignKey("EnvironmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DemandForecastTool.Context.ResourceType", "ResourceType")
                        .WithMany("ResourceRequests")
                        .HasForeignKey("ResourceTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DataCentre");

                    b.Navigation("Environment");

                    b.Navigation("ResourceType");
                });

            modelBuilder.Entity("DemandForecastTool.Context.DataCentre", b =>
                {
                    b.Navigation("ResourceRequests");
                });

            modelBuilder.Entity("DemandForecastTool.Context.Environment", b =>
                {
                    b.Navigation("ResourceRequests");
                });

            modelBuilder.Entity("DemandForecastTool.Context.ResourceType", b =>
                {
                    b.Navigation("ResourceRequests");
                });
#pragma warning restore 612, 618
        }
    }
}
